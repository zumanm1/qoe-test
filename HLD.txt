Product Requirements Document: Mobile Network QoE Web Application

Version: 1.0
Date: October 26, 2023
Status: Draft

1. Introduction
1.1. Product Vision

To create a unified, intelligent web platform that empowers Mobile's network engineering and operations teams to proactively monitor, analyze, and optimize network Quality of Experience (QoE) in real-time. This application will transform network management from a reactive, siloed process into a proactive, data-driven, and holistic discipline.

1.2. Problem Statement

Diagnosing the root cause of poor network performance (e.g., slow speed tests) is a complex and time-consuming task. Data is fragmented across multiple systems and network domains (RAN, Transport, Core), making end-to-end visibility difficult. Engineers lack the tools to simulate the impact of configuration changes, leading to a trial-and-error approach to optimization. This results in extended Mean Time To Resolution (MTTR) and a degraded subscriber experience.

1.3. Proposed Solution

The Mobile Network QoE Web Application is a comprehensive platform that provides:

Centralized, real-time monitoring across all network layers.

An interactive simulation engine to model network changes and predict QoE impact.

Automated diagnostics and optimization recommendations to guide engineers.

Rich data visualization through topological maps, dashboards, and reports.

This solution will provide a single source of truth for network performance, enabling faster troubleshooting and more effective optimization.

2. Goals and Objectives
Goal	Objective(s)	Success Metric(s)
Improve Operational Efficiency	Reduce the average time required to diagnose network performance issues.	- Decrease Mean Time To Resolution (MTTR) by 40% within 6 months of launch.<br>- 80% of network engineers actively using the platform monthly.
Enhance Network Quality	Proactively identify and resolve potential network bottlenecks before they impact subscribers.	- Increase the average network QoE score by 15%.<br>- Reduce the number of critical performance-related alerts by 30%.
Enable Data-Driven Decisions	Empower engineers to make informed optimization decisions based on simulations and historical data.	- 90% of major network parameter changes to be simulated in the app before live deployment.<br>- Increase in positive outcomes from implemented recommendations.
Provide Executive Visibility	Offer high-level dashboards for management to track overall network health and ROI on optimizations.	- Generation and review of weekly executive summary reports.<br>- Correlation of network QoE improvements with subscriber churn reduction.
3. User Personas and Stories
3.1. Personas

David, the NOC Engineer (Primary): Monitors the network 24/7. Needs to quickly detect, triage, and resolve live performance issues. Values real-time alerts, clear dashboards, and guided troubleshooting workflows.

Sarah, the Planning Engineer (Secondary): Responsible for long-term network strategy and capacity planning. Needs to analyze historical trends, simulate the impact of new technologies or configuration changes, and generate reports to justify investments.

Mark, the Engineering Manager (Tertiary): Oversees the network operations and planning teams. Needs high-level summaries of network health, team performance (MTTR), and SLA compliance to report to upper management.

3.2. User Stories

As David (NOC Engineer), I want to see a real-time network topology map with color-coded health statuses so that I can instantly identify which network elements are experiencing issues.

As David, I want to receive automated alerts with initial diagnostic information so that I can start troubleshooting immediately without manual data gathering.

As Sarah (Planning Engineer), I want to use a simulation engine to adjust parameters like SINR and PRB utilization so that I can predict the impact on QoE and throughput before implementing changes in the live network.

As Sarah, I want to save and compare different simulation scenarios so that I can present the best optimization strategy to management.

As Mark (Manager), I want to view an executive dashboard with overall QoE scores and domain health percentages so that I can quickly assess the state of the network at any time.

4. Features & Functional Requirements
4.1. Real-time Monitoring Dashboard

A comprehensive dashboard serving as the main landing page.

Summary Statistics: Display key metrics like total/active network elements, average QoE score, and recent test counts.

Domain Health: A visual breakdown (e.g., donut chart or progress bars) of the health of each network domain (RAN, Transport, Core, Internet) based on the status of their constituent elements and key KPIs.

KPI Widgets: Real-time display of critical end-to-end KPIs (Download/Upload Speed, Latency, Jitter, Packet Loss). Each widget will show the current value and a mini-trendline chart.

Live Alert Feed: A ticker or list showing the most recent critical and warning alerts.

Recent Activity: Lists of recent performance tests and saved simulation scenarios.

4.2. Network Topology Visualization

An interactive, hierarchical map of the entire network infrastructure.

Element Display: Graphically represent all network elements from UE to the Ookla Speed Test Server.

Domain Grouping: Group elements visually by their domain (RAN, Transport, etc.).

Real-time Status: Element borders or icons will be color-coded based on their live status (e.g., green for active, orange for warning, red for critical). Status updates will be pushed via WebSockets.

Interactive Pop-ups: Clicking on an element will display a pop-up with its name, type, domain, status, and key real-time KPIs.

Connections & Interfaces: Lines between elements will represent connections. Clicking a line will show interface details and traffic flow.

4.3. QoE Simulation Engine

An interactive tool for "what-if" analysis of network performance.

Parameter Controls: A panel with sliders and inputs for adjusting key network parameters across all domains.

Domain	Parameter	Control	Range
RAN	SINR (Signal Quality)	Range Slider	-5 to 30 dB
	PRB Utilization	Range Slider	0 to 100%
	Connected Users	Range Slider	10 to 500
	BLER (Block Error Rate)	Range Slider	0 to 30%
Transport	MPLS Tunnel Utilization	Range Slider	0 to 100%
	LSP Flapping	Range Slider	0 to 10 /hr
Core	GTP-U Tunnel Efficiency	Range Slider	70 to 100%
	Bearer QoS Policy Rate	Range Slider	10 to 500 Mbps

Real-time Results: As parameters are adjusted, the results panel will instantly update with calculated metrics:

Overall QoE Score: A large numerical display with a qualitative rating (Excellent, Good, Poor).

Performance Metrics: Download/Upload Speed, Total Latency, Packet Loss.

Latency Breakdown Chart: A bar chart showing latency contribution from each segment (Air Interface, GTP Tunnel, MPLS, etc.).

Optimization Recommendations: A dynamic list of recommendations will be generated based on the current simulation parameters, highlighting critical issues and potential improvements.

4.4. Scenario Management

Functionality to save, load, and compare simulation results.

Save Scenario: Users can save the current set of simulation parameters with a name and description.

Load Scenario: Users can load previously saved scenarios to re-run simulations.

Compare Scenarios: A dedicated view to compare two scenarios side-by-side, showing the difference in parameters and the resulting improvement/degradation in QoE, speed, and latency.

4.5. Reporting

Generation of PDF and CSV reports for analysis and presentation.

Executive Summary: A high-level, one-page report on overall network health.

Technical Deep Dive: A detailed report with granular KPI data for a specific time range or network segment.

Optimization Report: A report based on a simulation, detailing the proposed changes, expected impact, and recommendations.

Trend Analysis: Historical performance charts for key KPIs over days, weeks, or months.

4.6. User & Access Management

Authentication: Secure user login with password hashing.

Role-Based Access Control (RBAC):

Viewer: Can view dashboards, topology, and reports. Cannot run simulations or make changes.

Engineer: Can do everything a Viewer can, plus run simulations, save scenarios, and manage network elements.

Admin: Full access, including user management.

5. Non-Functional Requirements
Category	Requirement
Performance	- API Response Time: < 200ms for 95% of requests.<br>- Page Load Time: < 3 seconds for initial dashboard load.<br>- Real-time Update Latency: < 500ms from event to UI update.<br>- Data Ingestion: Capable of processing 1000 KPI measurements per second.
Scalability	- Concurrent Users: Support at least 100 concurrent users without performance degradation.<br>- Horizontal Scaling: The architecture (Celery, Redis) must support adding more web/worker nodes.
Reliability	- Uptime: 99.9% availability.<br>- Data Integrity: No loss of KPI or configuration data. Regular database backups.
Security	- Authentication: Passwords must be salted and hashed (e.g., using werkzeug.security).<br>- Session Management: Secure, HTTP-only session cookies with a reasonable timeout (e.g., 24 hours).<br>- Authorization: API endpoints and UI features must be protected by role-based checks.<br>- Input Validation: All user input must be validated and sanitized to prevent XSS and other injection attacks (handled by Flask-WTF).
Usability	- The UI must be intuitive and require minimal training for a network engineer.<br>- The application must be responsive and accessible on standard desktop and tablet browsers.
6. Technical Architecture & Stack

Backend: Python 3.9+, Flask

Database: SQLAlchemy ORM with SQLite (for development) and PostgreSQL (for production).

Asynchronous Tasks: Celery for background jobs like report generation and data processing.

Real-time Communication: Flask-SocketIO for pushing live data to the frontend.

Caching & Message Broker: Redis.

Frontend: HTML5, CSS3, JavaScript, with Bootstrap 5 for responsiveness and Chart.js for data visualization.

Deployment: Gunicorn WSGI server behind an Nginx reverse proxy, containerized with Docker.

7. Data Models

The database will be structured around the following core models using SQLAlchemy.

User: Stores user credentials, roles, and metadata.

id, username, email, password_hash, role, created_at, last_login

NetworkElement: Represents a device in the network.

id, element_name, element_type, domain, status

KPIDefinition: Defines the types of KPIs that can be measured.

id, kpi_name, kpi_code, unit, description

KPIMeasurement: A single measurement of a KPI for an element at a point in time.

id, element_id, kpi_id, value, timestamp

SimulationScenario: A saved set of parameters from the simulation engine.

id, scenario_name, description, created_by_id, parameters (JSON)

OptimizationRecommendation: A recommendation generated by the system.

id, scenario_id, domain, severity, recommendation, impact_estimate

8. Success Metrics
Metric	Target	Measurement Method
User Adoption Rate	80% of NOC/Planning engineers are active users	Monthly Active Users (MAU) / Total Target Users
Mean Time to Resolution (MTTR)	40% reduction	Analysis of ticket resolution times for performance-related issues.
Simulation Usage	50% of scenarios are saved and referenced	Count of saved scenarios vs. anonymous simulation runs.
Feature Engagement	High usage of Topology, Simulation, and Reporting features	Analytics tracking clicks and time spent on each feature.
System Uptime	> 99.9%	Uptime monitoring tool (e.g., Pingdom, UptimeRobot).
9. Future Considerations (Roadmap)

Phase 1 (MVP): Foundation, Real-time Dashboard, Network Topology, Basic Simulation Engine.

Phase 2: Advanced Simulation (scenario comparison), Reporting Module, User Management.

Phase 3: Machine Learning Integration for predictive analytics and more intelligent recommendations.

Phase 4: Automated Root Cause Analysis (RCA) and integration with ticketing systems for automated ticket creation.

Phase 5: Mobile-first version for field engineers.